{
  "version": 3,
  "sources": ["..\\node_modules\\mitt\\dist\\mitt.mjs", "..\\src\\index.ts"],
  "sourcesContent": [
    "export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n",
    "import mitt, { type Emitter } from 'mitt'\r\n\r\nexport function sleep(time: number) {\r\n    return new Promise<void>(finish => { setTimeout(finish, time) })\r\n}\r\n\r\nexport type CancelableCall = ReturnType<typeof setTimeout>\r\n\r\nexport function callSyncAfter(delay: number, fn: () => any): CancelableCall {\r\n    return setTimeout(fn, delay)\r\n}\r\n\r\nexport function cancelCallSync(handle: CancelableCall) { clearTimeout(handle) }\r\n\r\nexport function callAfter<T>(delay: number, fn: () => T) {\r\n    return new Promise<T>(resolve => { setTimeout(() => resolve(fn()), delay) })\r\n}\r\n\r\nexport type CancelableRepeat = ReturnType<typeof setInterval>\r\n\r\nexport interface RepeatOptions {\r\n    callWhenStart: boolean\r\n    maxTimes?: number\r\n}\r\n\r\nexport function repeatEvery(\r\n    delay: number, fn: () => any, opts?: Partial<RepeatOptions>\r\n): CancelableRepeat {\r\n    let times = opts?.maxTimes\r\n    if (opts?.callWhenStart) {\r\n        setTimeout(fn, 0)\r\n        if (times) times -= 1\r\n    }\r\n    if (times === undefined) return setInterval(fn, delay)\r\n    if (times < 1) return undefined as any\r\n    const handle = setInterval(() => {\r\n        if (--times! < 0) clearInterval(handle)\r\n        else fn()\r\n    }, delay)\r\n    return handle\r\n}\r\n\r\nexport function cancelRepeat(handle: CancelableRepeat) { clearInterval(handle) }\r\n\r\nexport function loop(times: number, fn: () => any) { for (let i = times; i > 0; --i) fn() }\r\n\r\nexport interface TimerOptions extends RepeatOptions {\r\n    repeat: boolean\r\n}\r\n\r\nexport class Timer<T> implements TimerOptions {\r\n    static defaultOptions: TimerOptions = {\r\n        repeat: false,\r\n        callWhenStart: false,\r\n    }\r\n\r\n    delay\r\n    fn\r\n    repeat\r\n    callWhenStart\r\n    maxTimes\r\n\r\n    constructor(delay: number, fn?: () => T, options?: Partial<TimerOptions>) {\r\n        this.delay = delay\r\n        this.fn = fn\r\n        const opt = { ...Timer.defaultOptions, ...options }\r\n        this.repeat = opt.repeat\r\n        this.callWhenStart = opt.callWhenStart\r\n        this.maxTimes = opt.maxTimes\r\n    }\r\n\r\n    get running() { return Boolean(this.#handle) }\r\n    set running(to) { to ? this.start() : this.stop() }\r\n    get events() { return this.#emitter }\r\n    get callTimes() { return this.#callTimes }\r\n    get remainTimes() { return this.maxTimes ? this.maxTimes - this.#callTimes : Infinity }\r\n    get hasMoreTrigger() {\r\n        return this.repeat && (this.maxTimes === undefined || this.#callTimes < this.maxTimes - 1)\r\n    }\r\n\r\n    start() {\r\n        if (this.#handle) return this\r\n        this.#callTimes = 0\r\n        this.#emitter.emit('runningChanged', true)\r\n        return this.#start()\r\n    }\r\n\r\n    stop() {\r\n        if (!this.#handle) return\r\n        clearTimeout(this.#handle)\r\n        this.#emitter.emit('runningChanged', false)\r\n        this.#stop()\r\n    }\r\n\r\n    reset() {\r\n        this.#callTimes = 0\r\n        if (!this.#handle) return\r\n        clearTimeout(this.#handle)\r\n        return this.#start()\r\n    }\r\n\r\n    restart() {\r\n        this.stop()\r\n        return this.start()\r\n    }\r\n\r\n    waitTriggered() {\r\n        return new Promise<T>((resolve, reject) => {\r\n            this.#triggerResolvers.push(resolve)\r\n            this.#triggerRejectors.push(reject)\r\n        })\r\n    }\r\n\r\n    waitStop() { return new Promise<void>(resolve => this.#stopResolvers.push(resolve)) }\r\n\r\n    #callTimes = 0\r\n    #handle?: ReturnType<typeof setTimeout>\r\n    #triggerResolvers: ((result: T) => void)[] = []\r\n    #triggerRejectors: ((reason: any) => void)[] = []\r\n    #stopResolvers: (() => void)[] = []\r\n    #emitter: Emitter<{ 'runningChanged': boolean, 'triggered': T }> = mitt()\r\n\r\n    #call() {\r\n        this.#callTimes += 1\r\n        try {\r\n            const value = this.fn?.() as T\r\n            for (const resolve of this.#triggerResolvers) resolve(value)\r\n            this.#emitter.emit('triggered', value)\r\n        } catch (e) {\r\n            for (const reject of this.#triggerRejectors) reject(e)\r\n        } finally {\r\n            this.#triggerResolvers.length = this.#triggerRejectors.length = 0\r\n            if (!this.hasMoreTrigger) this.#stop()\r\n        }\r\n    }\r\n\r\n    #tigger() {\r\n        if (this.hasMoreTrigger) this.#createHandle()\r\n        this.#call()\r\n    }\r\n\r\n    #createHandle() { this.#handle = setTimeout(this.#tigger.bind(this), this.delay) }\r\n\r\n    #start() {\r\n        if (this.callWhenStart) setTimeout(() => this.#call(), 0)\r\n        if (!this.callWhenStart || (this.maxTimes ?? 3) >= 2) this.#createHandle()\r\n        return this\r\n    }\r\n\r\n    #stop() {\r\n        this.#handle = undefined\r\n        for (const reject of this.#triggerRejectors) reject(new Error('Timer stopped'))\r\n        this.#triggerResolvers.length = this.#triggerRejectors.length = 0\r\n        for (const resolve of this.#stopResolvers) resolve()\r\n        this.#stopResolvers.length = 0\r\n    }\r\n}"
  ],
  "mappings": "AAAA,SAAO,CAAgB,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,ECEjT,SAAS,CAAK,CAAC,EAAc,CAChC,OAAO,IAAI,QAAc,KAAU,CAAE,WAAW,EAAQ,CAAI,EAAG,EAK5D,SAAS,CAAa,CAAC,EAAe,EAA+B,CACxE,OAAO,WAAW,EAAI,CAAK,EAGxB,SAAS,CAAc,CAAC,EAAwB,CAAE,aAAa,CAAM,EAErE,SAAS,CAAY,CAAC,EAAe,EAAa,CACrD,OAAO,IAAI,QAAW,KAAW,CAAE,WAAW,IAAM,EAAQ,EAAG,CAAC,EAAG,CAAK,EAAG,EAUxE,SAAS,CAAW,CACvB,EAAe,EAAe,EACd,CAChB,IAAI,EAAQ,GAAM,SAClB,GAAI,GAAM,eAEN,GADA,WAAW,EAAI,CAAC,EACZ,EAAO,GAAS,EAExB,GAAI,IAAU,OAAW,OAAO,YAAY,EAAI,CAAK,EACrD,GAAI,EAAQ,EAAG,OACf,MAAM,EAAS,YAAY,IAAM,CAC7B,KAAM,EAAS,EAAG,cAAc,CAAM,MACjC,GAAG,GACT,CAAK,EACR,OAAO,EAGJ,SAAS,CAAY,CAAC,EAA0B,CAAE,cAAc,CAAM,EAEtE,SAAS,CAAI,CAAC,EAAe,EAAe,CAAE,QAAS,EAAI,EAAO,EAAI,IAAK,EAAG,EAAG,EAMjF,MAAM,CAAiC,OACnC,gBAA+B,CAClC,OAAQ,GACR,cAAe,EACnB,EAEA,MACA,GACA,OACA,cACA,SAEA,WAAW,CAAC,EAAe,EAAc,EAAiC,CACtE,KAAK,MAAQ,EACb,KAAK,GAAK,EACV,MAAM,EAAM,IAAK,EAAM,kBAAmB,CAAQ,EAClD,KAAK,OAAS,EAAI,OAClB,KAAK,cAAgB,EAAI,cACzB,KAAK,SAAW,EAAI,YAGpB,QAAO,EAAG,CAAE,OAAO,QAAQ,KAAK,EAAO,KACvC,QAAO,CAAC,EAAI,CAAE,EAAK,KAAK,MAAM,EAAI,KAAK,KAAK,KAC5C,OAAM,EAAG,CAAE,OAAO,KAAK,MACvB,UAAS,EAAG,CAAE,OAAO,KAAK,MAC1B,YAAW,EAAG,CAAE,OAAO,KAAK,SAAW,KAAK,SAAW,KAAK,GAAa,OACzE,eAAc,EAAG,CACjB,OAAO,KAAK,SAAW,KAAK,WAAa,QAAa,KAAK,GAAa,KAAK,SAAW,GAG5F,KAAK,EAAG,CACJ,GAAI,KAAK,GAAS,OAAO,KAGzB,OAFA,KAAK,GAAa,EAClB,KAAK,GAAS,KAAK,iBAAkB,EAAI,EAClC,KAAK,GAAO,EAGvB,IAAI,EAAG,CACH,IAAK,KAAK,GAAS,OACnB,aAAa,KAAK,EAAO,EACzB,KAAK,GAAS,KAAK,iBAAkB,EAAK,EAC1C,KAAK,GAAM,EAGf,KAAK,EAAG,CAEJ,GADA,KAAK,GAAa,GACb,KAAK,GAAS,OAEnB,OADA,aAAa,KAAK,EAAO,EAClB,KAAK,GAAO,EAGvB,OAAO,EAAG,CAEN,OADA,KAAK,KAAK,EACH,KAAK,MAAM,EAGtB,aAAa,EAAG,CACZ,OAAO,IAAI,QAAW,CAAC,EAAS,IAAW,CACvC,KAAK,GAAkB,KAAK,CAAO,EACnC,KAAK,GAAkB,KAAK,CAAM,EACrC,EAGL,QAAQ,EAAG,CAAE,OAAO,IAAI,QAAc,KAAW,KAAK,GAAe,KAAK,CAAO,CAAC,EAElF,GAAa,EACb,GACA,GAA6C,CAAC,EAC9C,GAA+C,CAAC,EAChD,GAAiC,CAAC,EAClC,GAAmE,EAAK,EAExE,EAAK,EAAG,CACJ,KAAK,IAAc,EACnB,GAAI,CACA,MAAM,EAAQ,KAAK,KAAK,EACxB,QAAW,KAAW,KAAK,GAAmB,EAAQ,CAAK,EAC3D,KAAK,GAAS,KAAK,YAAa,CAAK,QAChC,EAAP,CACE,QAAW,KAAU,KAAK,GAAmB,EAAO,CAAC,SACvD,CAEE,GADA,KAAK,GAAkB,OAAS,KAAK,GAAkB,OAAS,GAC3D,KAAK,eAAgB,KAAK,GAAM,GAI7C,EAAO,EAAG,CACN,GAAI,KAAK,eAAgB,KAAK,GAAc,EAC5C,KAAK,GAAM,EAGf,EAAa,EAAG,CAAE,KAAK,GAAU,WAAW,KAAK,GAAQ,KAAK,IAAI,EAAG,KAAK,KAAK,EAE/E,EAAM,EAAG,CACL,GAAI,KAAK,cAAe,WAAW,IAAM,KAAK,GAAM,EAAG,CAAC,EACxD,IAAK,KAAK,gBAAkB,KAAK,UAAY,IAAM,EAAG,KAAK,GAAc,EACzE,OAAO,KAGX,EAAK,EAAG,CACJ,KAAK,GAAU,OACf,QAAW,KAAU,KAAK,GAAmB,EAAO,IAAI,MAAM,eAAe,CAAC,EAC9E,KAAK,GAAkB,OAAS,KAAK,GAAkB,OAAS,EAChE,QAAW,KAAW,KAAK,GAAgB,EAAQ,EACnD,KAAK,GAAe,OAAS,EAErC",
  "debugId": "CE19F01C1017250564756E2164756E21",
  "names": []
}